service: stepFunctionsTest

plugins:
  - serverless-python-requirements
  - serverless-step-functions
  - serverless-pseudo-parameters

package:
  exclude:
    - node_modules/**
    - venv/**
    - .venv*/**
    - README.md
    - package.json
    - package-lock.json
    - .git/**

provider:
  name: aws
  runtime: python3.6
  environment:
    SF_ARN: { "Fn::Join" : [":", ["arn:aws:states:${self:provider.region}", { "Ref" : "AWS::AccountId" }, "stateMachine:MVPStepFunction" ] ]  }
    ACTIVITY_ARN: { "Fn::Join" : [":", ["arn:aws:states:${self:provider.region}", { "Ref" : "AWS::AccountId" }, "activity:waitForUploadActivity" ] ]  }
    REGION: ${self:provider.region}
    PDFUPLOAD_TABLE: PDFUpload-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - states:GetActivityTask
        - states:SendTaskSuccess
        - states:SendTaskFailure
        - states:SendTaskHeartbeat
      Resource: { "Fn::Join" : [":", ["arn:aws:states:${self:provider.region}", { "Ref" : "AWS::AccountId" }, "activity:waitForUploadActivity" ] ]  }
    - Effect: Allow
      Action:
        - states:StartExecution
      Resource: { "Fn::Join" : [":", ["arn:aws:states:${self:provider.region}", { "Ref" : "AWS::AccountId" }, "stateMachine:MVPStepFunction" ] ]  }
    - Effect: Allow
      Action:
        - s3:DeleteObject
        - s3:GetObject
        - s3:PutObject
        - s3:ListBucket
      Resource:
        - Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':s3:::doc-pdfs'
        - Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':s3:::doc-pdfs/*'
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PDFUPLOAD_TABLE}"



# you can overwrite defaults here
  stage: dev
  region: ap-southeast-1

functions:
  SplitPDF:
    handler: handler.split_doc_pdf
  NotifyUpload:
    handler: worker.notify_upload_worker
    events:
     - s3:
         description: PDF multipage document created in doc_pdf/
         bucket: doc-pdfs
         event: s3:ObjectCreated:*
  GetUploadUrl:
    handler: doc_get_upload_url.api_http_get
    events:
      - http:
          path: get_upload_url
          method: GET
          cors: true
  ReturnPresignedUrl:
    handler: handler.return_presigned_url
  
stepFunctions:
  stateMachines:
    MVPstepfunc:
      name: MVPStepFunction
      definition:
        Comment: "First step for MVP"
        StartAt: ReturnPresignedUrl
        States:
          ReturnPresignedUrl:
            Type: Task
            Resource: 
              Fn::GetAtt: [ReturnPresignedUrlLambdaFunction, Arn]
            Next: WaitForUpload
          WaitForUpload:
            Type: Task
            Resource: { "Fn::Join" : [":", ["arn:aws:states:${self:provider.region}", { "Ref" : "AWS::AccountId" }, "activity:waitForUploadActivity" ] ]  }
            TimeoutSeconds: 300
            HeartbeatSeconds: 60
            Next: SplitPDF
          SplitPDF:
            Type: Task
            Resource: 
              Fn::GetAtt: [SplitPDFLambdaFunction, Arn]
            End: true

  activities:
    - waitForUploadActivity

resources:
  Resources:
    PDFUploadDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - 
            AttributeName: uuid
            AttributeType: S
        KeySchema:
          - 
            AttributeName: uuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.PDFUPLOAD_TABLE}